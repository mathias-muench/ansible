" Plugin 'thaerkh/vim-workspace'
let g:workspace_autocreate = 1
let g:workspace_session_disable_on_args = 1

" Plugin 'pearofducks/ansible-vim'
let g:ansible_unindent_after_newline = 1

" Plugin 'vim-syntastic/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1

" Plugin 'tpope/vim-sensible'
" set path+=**
" set wildmode=longest,list,full

set hidden

if has("gui_running")
  set visualbell
  set guifont=Fira\ Mono\ 12
endif

if &diff
  syntax off
endif
  
augroup vimrc
    autocmd!
    autocmd BufRead,BufNewFile *.json.j2 set filetype=json.jinja2
    autocmd FileType html,html.* setlocal shiftwidth=2 tabstop=2 noexpandtab autoindent
    autocmd FileType json,json.*,yaml,yaml.* setlocal shiftwidth=2 tabstop=2 expandtab autoindent
    autocmd FileType python,jinja setlocal shiftwidth=4 tabstop=4 expandtab autoindent
    autocmd FileType markdown setlocal shiftwidth=2 tabstop=2 expandtab autoindent
augroup END

" ansible role mode
if argc() >= 1 && argv()[0] =~ 'roles/.*/$'
	echo 'ansible role mode: '
	set suffixesadd=.yml
	let x = argv()[0]
	execute 'args' join(glob(x.'{tasks,defaults,vars,meta,handlers}/*.yml', 0, 1))
    execute 'cd' x
	set path+=files/**
	set path+=templates/**
endif

if argc() >= 1 && argv()[0] =~ '^inv'
	set path+=./host_vars/
	set path+=./group_vars/
	set path+=./*/host_vars/
	set path+=./*/group_vars/
	set isfname+=@-@
	set suffixesadd=.yml
endif
